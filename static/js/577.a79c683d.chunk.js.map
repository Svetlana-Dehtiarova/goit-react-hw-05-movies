{"version":3,"file":"static/js/577.a79c683d.chunk.js","mappings":"4OAEaA,EAAWC,EAAAA,GAAAA,GAAH,uVAaRC,EAAWD,EAAAA,GAAAA,GAAH,uHAMRE,EAAYF,EAAAA,GAAAA,EAAH,oH,kBCjBTG,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,+BACE,SAACL,EAAD,UACGK,GACCA,EAAQC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACrC,OACE,UAACR,EAAD,YACE,gBACES,IACmB,OAAjBH,EACII,EADJ,0CAEuCJ,GAEzCK,IAAKJ,KAEP,SAACN,EAAD,UAAYM,KACZ,UAACN,EAAD,yBAAuBO,OAVVH,EAalB,OAIV,E,kBC1BYO,EAAUb,EAAAA,GAAAA,QAAH,qLCqCpB,EA9Ba,WACX,OAA8Bc,EAAAA,EAAAA,UAAS,IAAvC,eAAOV,EAAP,KAAgBW,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACRL,GAAa,IACbM,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GACJV,EAAWU,EACZ,IACAC,OAAM,SAAAR,GAAK,OAAIC,EAASD,EAAMS,QAAnB,IACXC,SAAQ,WACPX,GAAa,EACd,GACJ,GAAE,CAACG,KAGF,gCACGJ,IAAa,SAACa,EAAA,EAAD,IACbX,IAAS,6CAAqBA,MAC/B,SAACL,EAAD,WACE,SAACV,EAAD,CAAaC,QAASA,QAI7B,C,6LCnCK0B,EAAS,CACbC,IAAK,uBACLC,QAAS,+BACTC,OAAQ,CACNC,QAAS,qCAIAC,EAAc,mCAAG,qGACLC,EAAAA,EAAAA,GAAMN,GADD,cACtBL,EADsB,yBAErBA,EAASY,KAAKC,SAFO,2CAAH,qDAKdf,EAAe,mCAAG,WAAMH,GAAN,gFACvBU,EAAS,CACbC,IAAI,UAAD,OAAYX,EAAZ,YACHY,QAAS,+BACTC,OAAQ,CACNC,QAAS,qCALgB,UASNE,EAAAA,EAAAA,GAAMN,GATA,cASvBL,EATuB,yBAUtBA,EAASY,KAAKE,MAVQ,2CAAH,sDAafC,EAAmB,mCAAG,WAAMpB,GAAN,gFAC3BU,EAAS,CACbC,IAAI,UAAD,OAAYX,GACfY,QAAS,+BACTC,OAAQ,CACNC,QAAS,qCALoB,UASVE,EAAAA,EAAAA,GAAMN,GATI,cAS3BL,EAT2B,yBAW1BA,EAASY,MAXiB,2CAAH,sDAcnBI,EAAe,mCAAG,WAAMrB,GAAN,gFACvBU,EAAS,CACbC,IAAI,UAAD,OAAYX,EAAZ,YACHY,QAAS,+BACTC,OAAQ,CACNC,QAAS,qCALgB,UASNE,EAAAA,EAAAA,GAAMN,GATA,cASvBL,EATuB,yBAUtBA,EAASY,KAAKC,SAVQ,2CAAH,sDAafI,EAAc,mCAAG,WAAMT,GAAN,gFACtBH,EAAS,CACbC,IAAI,gBACJC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTS,MAAOV,IANiB,UAULG,EAAAA,EAAAA,GAAMN,GAVD,cAUtBL,EAVsB,yBAWrBA,EAASY,KAAKC,SAXO,2CAAH,qD","sources":["components/CastGallery/CastGallery.styled.js","components/CastGallery/CastGallery.jsx","pages/Cast/Cast.styled.js","pages/Cast/Cast.jsx","servises/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  grid-gap: 16px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  margin: 0 auto;\n  max-width: calc(100vw - 48px);\n  border-radius: 10px;\n  color: rgb(66, 6, 150);\n  text-shadow: 1px 2px 2px rgb(246, 238, 240);\n  padding: 10px;\n  box-shadow: 2px 4px 4px rgb(184, 203, 243);\n`;\n\nexport const CastItem = styled.li`\n  padding-bottom: 5px;\n  box-shadow: 2px 4px 4px rgb(184, 203, 243);\n  border-radius: 10px;\n`;\n\nexport const Paragraph = styled.p`\n  padding: 5px 10px;\n  color: rgb(66, 6, 150);\n  font-size: 16px;\n  text-align: center;\n`;\n","// import { notFoundImg } from 'links/imgNotFound';\nimport { CastList, CastItem, Paragraph } from './CastGallery.styled';\nimport imageNotFaund from '../../images/imgNotFound.jpg';\n\nexport const CastGallery = ({ credits }) => {\n  return (\n    <>\n      <CastList>\n        {credits &&\n          credits.map(({ id, profile_path, name, character }) => {\n            return (\n              <CastItem key={id}>\n                <img\n                  src={\n                    profile_path === null\n                      ? imageNotFaund\n                      : `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  }\n                  alt={name}\n                />\n                <Paragraph>{name}</Paragraph>\n                <Paragraph>Character: {character}</Paragraph>\n              </CastItem>\n            );\n          })}\n      </CastList>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin: 20px 20px;\n  padding-bottom: 20px;\n  outline: 1px solid rgb(66, 6, 150);\n  box-shadow: 2px 4px 4px rgb(184, 203, 243);\n  border-radius: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { CastGallery } from 'components/CastGallery/CastGallery';\nimport { Loader } from 'components/Loader/Loader';\nimport { getMovieCredits } from '../../servises/Api';\n\nimport { Section } from './Cast.styled';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieCredits(movieId)\n      .then(response => {\n        setCredits(response);\n      })\n      .catch(error => setError(error.message))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Oops, some error:{error}</p>}\n      <Section>\n        <CastGallery credits={credits} />\n      </Section>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst config = {\n  url: '/trending/movie/week',\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0bf9a11da9d083f4751315d07dcbd89b',\n  },\n};\n\nexport const getTrandingApi = async () => {\n  const response = await axios(config);\n  return response.data.results;\n};\n\nexport const getMovieCredits = async movieId => {\n  const config = {\n    url: `/movie/${movieId}/credits`,\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: '0bf9a11da9d083f4751315d07dcbd89b',\n    },\n  };\n\n  const response = await axios(config);\n  return response.data.cast;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const config = {\n    url: `/movie/${movieId}`,\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: '0bf9a11da9d083f4751315d07dcbd89b',\n    },\n  };\n\n  const response = await axios(config);\n\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const config = {\n    url: `/movie/${movieId}/reviews`,\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: '0bf9a11da9d083f4751315d07dcbd89b',\n    },\n  };\n\n  const response = await axios(config);\n  return response.data.results;\n};\n\nexport const getMovieSearch = async params => {\n  const config = {\n    url: `/search/movie`,\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: '0bf9a11da9d083f4751315d07dcbd89b',\n      query: params,\n    },\n  };\n\n  const response = await axios(config);\n  return response.data.results;\n};\n"],"names":["CastList","styled","CastItem","Paragraph","CastGallery","credits","map","id","profile_path","name","character","src","imageNotFaund","alt","Section","useState","setCredits","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","getMovieCredits","then","response","catch","message","finally","Loader","config","url","baseURL","params","api_key","getTrandingApi","axios","data","results","cast","getMovieDetailsById","getMovieReviews","getMovieSearch","query"],"sourceRoot":""}