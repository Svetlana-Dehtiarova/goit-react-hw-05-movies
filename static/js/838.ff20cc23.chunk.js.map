{"version":3,"file":"static/js/838.ff20cc23.chunk.js","mappings":"yPAEaA,EAAUC,EAAAA,GAAAA,QAAH,8CAIPC,EAAQD,EAAAA,GAAAA,GAAH,gUAYLE,EAAYF,EAAAA,GAAAA,GAAH,sE,GAKGA,EAAAA,GAAAA,GAAH,6GASGA,EAAAA,GAAAA,EAAH,gD,OC9BTG,EAAYH,EAAAA,GAAAA,GAAH,wI,SCGTI,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,OACE,8BACGA,EAASC,KAAI,SAAAC,GAAK,OACjB,SAAC,EAAD,WACE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAME,IAA1B,SAAiCF,EAAMG,SADzBH,EAAME,GADL,KAQxB,ECwBD,EAjCa,WACX,OAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAON,EAAP,KAAiBO,EAAjB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,KACGC,MAAK,SAAAC,GACJR,EAAYQ,EACb,IACAC,OAAM,SAAAN,GAAK,OAAIC,EAASD,EAAMO,QAAnB,IACXC,SAAQ,WACPT,GAAa,EACd,GACJ,GAAE,KAGD,gCACGC,IAAS,0CAAkBA,MAE5B,UAAChB,EAAD,YACE,SAACE,EAAD,8BACA,SAACC,EAAD,UACGG,IAAY,SAACD,EAAD,CAAcC,SAAUA,SAIxCQ,IAAa,SAACW,EAAA,EAAD,MAGnB,C,6LCpCKC,EAAS,CACbC,IAAK,uBACLC,QAAS,+BACTC,OAAQ,CACNC,QAAS,qCAIAX,EAAc,mCAAG,qGACLY,EAAAA,EAAAA,GAAML,GADD,cACtBL,EADsB,yBAErBA,EAASW,KAAKC,SAFO,2CAAH,qDAKdC,EAAe,mCAAG,WAAMC,GAAN,gFACvBT,EAAS,CACbC,IAAI,UAAD,OAAYQ,EAAZ,YACHP,QAAS,+BACTC,OAAQ,CACNC,QAAS,qCALgB,UASNC,EAAAA,EAAAA,GAAML,GATA,cASvBL,EATuB,yBAUtBA,EAASW,KAAKI,MAVQ,2CAAH,sDAafC,EAAmB,mCAAG,WAAMF,GAAN,gFAC3BT,EAAS,CACbC,IAAI,UAAD,OAAYQ,GACfP,QAAS,+BACTC,OAAQ,CACNC,QAAS,qCALoB,UASVC,EAAAA,EAAAA,GAAML,GATI,cAS3BL,EAT2B,yBAW1BA,EAASW,MAXiB,2CAAH,sDAcnBM,EAAe,mCAAG,WAAMH,GAAN,gFACvBT,EAAS,CACbC,IAAI,UAAD,OAAYQ,EAAZ,YACHP,QAAS,+BACTC,OAAQ,CACNC,QAAS,qCALgB,UASNC,EAAAA,EAAAA,GAAML,GATA,cASvBL,EATuB,yBAUtBA,EAASW,KAAKC,SAVQ,2CAAH,sDAafM,EAAc,mCAAG,WAAMV,GAAN,gFACtBH,EAAS,CACbC,IAAI,gBACJC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTU,MAAOX,IANiB,UAULE,EAAAA,EAAAA,GAAML,GAVD,cAUtBL,EAVsB,yBAWrBA,EAASW,KAAKC,SAXO,2CAAH,qD","sources":["pages/Home/Home.styled.js","components/TrendingItem/TrendingItem.styled.js","components/TrendingItem/TrendingItem.jsx","pages/Home/Home.jsx","servises/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin: 20px 20px;\n`;\n\nexport const Title = styled.h2`\n  margin-left: 20px;\n  margin-bottom: 20px;\n  text-shadow: 1px 1px 1px rgb(66, 6, 150);\n  background-color: rgb(164, 176, 248);\n  border-radius: 10px;\n  color: rgb(66, 6, 150);\n  text-shadow: 1px 2px 2px rgb(246, 238, 240);\n  padding: 10px;\n  box-shadow: 2px 4px 4px rgb(184, 203, 243);\n`;\n\nexport const FilmsList = styled.ol`\n  margin-left: 50px;\n  margin-bottom: 15px;\n`;\n\nexport const FilmsItem = styled.li`\n  margin-bottom: 5px;\n\n  :hover,\n  :focus {\n    color: rgb(164, 176, 248);\n  }\n`;\n\nexport const Paragraph = styled.p`\n  margin-bottom: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const FilmsItem = styled.li`\n  margin-bottom: 5px;\n  color: rgb(66, 6, 150);\n\n  :hover,\n  :focus {\n    color: rgb(164, 176, 248);\n  }\n`;\n","\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FilmsItem } from './TrendingItem.styled';\n\nexport const TrendingItem = ({ trending }) => {\n  return (\n    <>\n      {trending.map(movie => (\n        <FilmsItem key={movie.id}>\n          <Link to={`movies/${movie.id}`}>{movie.title}\n          </Link>\n        </FilmsItem>\n      ))}\n    </>\n  );\n};\n\nTrendingItem.propTypes = {\n  trending: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\n","import { useEffect, useState } from 'react';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { getTrandingApi } from '../../servises/Api';\nimport { Section, Title, FilmsList } from './Home.styled';\nimport { TrendingItem } from 'components/TrendingItem/TrendingItem';\n\nconst Home = () => {\n  const [trending, setTrending] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTrandingApi()\n      .then(response => {\n        setTrending(response);\n      })\n      .catch(error => setError(error.message))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      {error && <p>Oops, mistake:{error}</p>}\n\n      <Section>\n        <Title>Trending today</Title>\n        <FilmsList>\n          {trending && <TrendingItem trending={trending} />}\n        </FilmsList>\n      </Section>\n\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst config = {\n  url: '/trending/movie/week',\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0bf9a11da9d083f4751315d07dcbd89b',\n  },\n};\n\nexport const getTrandingApi = async () => {\n  const response = await axios(config);\n  return response.data.results;\n};\n\nexport const getMovieCredits = async movieId => {\n  const config = {\n    url: `/movie/${movieId}/credits`,\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: '0bf9a11da9d083f4751315d07dcbd89b',\n    },\n  };\n\n  const response = await axios(config);\n  return response.data.cast;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const config = {\n    url: `/movie/${movieId}`,\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: '0bf9a11da9d083f4751315d07dcbd89b',\n    },\n  };\n\n  const response = await axios(config);\n\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const config = {\n    url: `/movie/${movieId}/reviews`,\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: '0bf9a11da9d083f4751315d07dcbd89b',\n    },\n  };\n\n  const response = await axios(config);\n  return response.data.results;\n};\n\nexport const getMovieSearch = async params => {\n  const config = {\n    url: `/search/movie`,\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: '0bf9a11da9d083f4751315d07dcbd89b',\n      query: params,\n    },\n  };\n\n  const response = await axios(config);\n  return response.data.results;\n};\n"],"names":["Section","styled","Title","FilmsList","FilmsItem","TrendingItem","trending","map","movie","to","id","title","useState","setTrending","isLoading","setIsLoading","error","setError","useEffect","getTrandingApi","then","response","catch","message","finally","Loader","config","url","baseURL","params","api_key","axios","data","results","getMovieCredits","movieId","cast","getMovieDetailsById","getMovieReviews","getMovieSearch","query"],"sourceRoot":""}