{"version":3,"file":"static/js/591.07a97bb6.chunk.js","mappings":"oQAEaA,EAAeC,EAAAA,GAAAA,GAAH,ySAYZC,EAAUD,EAAAA,GAAAA,GAAH,gGAMPE,EAAeF,EAAAA,GAAAA,GAAH,mEAKZG,EAASH,EAAAA,GAAAA,EAAH,gGAMNI,EAAUJ,EAAAA,GAAAA,EAAH,0EAKPK,EAAeL,EAAAA,GAAAA,EAAH,8F,SCzBZM,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OACE,iCACE,SAACR,EAAD,uBACA,SAACE,EAAD,UACsB,IAAnBM,EAAQC,QACP,SAACH,EAAD,8DAIAE,EAAQE,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,UAACV,EAAD,YACE,UAACC,EAAD,sBAAiBQ,MACjB,SAACP,EAAD,UAAUQ,MAFOF,EAKtB,QAKV,EC/BYG,EAAUb,EAAAA,GAAAA,QAAH,6ECsCpB,EA/BgB,WACd,OAAmCc,EAAAA,EAAAA,UAAS,IAA5C,eAAOP,EAAP,KAAgBQ,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACRL,GAAa,IACbM,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GACJV,EAAgBU,EACjB,IACAC,OAAM,SAAAR,GAAK,OAAIC,EAASD,EAAMS,QAAnB,IACXC,SAAQ,WACPX,GAAa,EACd,GACJ,GAAE,CAACG,KAGF,gCACGJ,IAAa,SAACa,EAAA,EAAD,IACbX,IAAS,0CAAkBA,MAE5B,SAACL,EAAD,WACE,SAACP,EAAD,CAAcC,QAASA,QAI9B,C,6LCpCKuB,EAAS,CACbC,IAAK,uBACLC,QAAS,+BACTC,OAAQ,CACNC,QAAS,qCAIAC,EAAc,mCAAG,qGACLC,EAAAA,EAAAA,GAAMN,GADD,cACtBL,EADsB,yBAErBA,EAASY,KAAKC,SAFO,2CAAH,qDAKdC,EAAe,mCAAG,WAAMnB,GAAN,gFACvBU,EAAS,CACbC,IAAI,UAAD,OAAYX,EAAZ,YACHY,QAAS,+BACTC,OAAQ,CACNC,QAAS,qCALgB,UASNE,EAAAA,EAAAA,GAAMN,GATA,cASvBL,EATuB,yBAUtBA,EAASY,KAAKG,MAVQ,2CAAH,sDAafC,EAAmB,mCAAG,WAAMrB,GAAN,gFAC3BU,EAAS,CACbC,IAAI,UAAD,OAAYX,GACfY,QAAS,+BACTC,OAAQ,CACNC,QAAS,qCALoB,UASVE,EAAAA,EAAAA,GAAMN,GATI,cAS3BL,EAT2B,yBAW1BA,EAASY,MAXiB,2CAAH,sDAcnBd,EAAe,mCAAG,WAAMH,GAAN,gFACvBU,EAAS,CACbC,IAAI,UAAD,OAAYX,EAAZ,YACHY,QAAS,+BACTC,OAAQ,CACNC,QAAS,qCALgB,UASNE,EAAAA,EAAAA,GAAMN,GATA,cASvBL,EATuB,yBAUtBA,EAASY,KAAKC,SAVQ,2CAAH,sDAafI,EAAc,mCAAG,WAAMT,GAAN,gFACtBH,EAAS,CACbC,IAAI,gBACJC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTS,MAAOV,IANiB,UAULG,EAAAA,EAAAA,GAAMN,GAVD,cAUtBL,EAVsB,yBAWrBA,EAASY,KAAKC,SAXO,2CAAH,qD","sources":["components/ReviewslList/ReviewslList.styled.js","components/ReviewslList/ReviewslList.jsx","pages/Reviews/Reviews.styled.js","pages/Reviews/Reviews.jsx","servises/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsTitle = styled.h3`\n  text-align: center;\n  margin-left: 20px;\n  margin-bottom: 30px;\n  padding: 10px;\n  color: rgb(246, 238, 240);\n  text-shadow: 1px 1px 1px rgb(66, 6, 150);\n  background-color: rgb(164, 176, 248);\n  border-radius: 5px;\n  box-shadow: 2px 4px 4px rgb(184, 203, 243);\n`;\n\nexport const Reviews = styled.ul`\n  margin-left: 50px;\n  margin-bottom: 15px;\n  list-style-type: disc;\n`;\n\nexport const ReviewslItem = styled.li`\n  margin-bottom: 5px;\n  font-size: 18px;\n`;\n\nexport const Author = styled.p`\n  margin-bottom: 20px;\n  font-weight: 600;\n  color: rgb(66, 6, 150);\n`;\n\nexport const Content = styled.p`\n  margin-bottom: 30px;\n  color: rgb(3, 13, 68);\n`;\n\nexport const EmptyReviews = styled.p`\n  margin-bottom: 30px;\n\n  text-align: center;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  ReviewsTitle,\n  Reviews,\n  EmptyReviews,\n  ReviewslItem,\n  Author,\n  Content,\n} from './ReviewslList.styled';\n\nexport const ReviewslList = ({ reviews }) => {\n  return (\n    <>\n      <ReviewsTitle>Reviews</ReviewsTitle>\n      <Reviews>\n        {reviews.length === 0 ? (\n          <EmptyReviews>\n            Oops! We don't have any reviews for this movie.\n          </EmptyReviews>\n        ) : (\n          reviews.map(({ id, author, content }) => {\n            return (\n              <ReviewslItem key={id}>\n                <Author>Author: {author}</Author>\n                <Content>{content}</Content>\n              </ReviewslItem>\n            );\n          })\n        )}\n      </Reviews>\n    </>\n  );\n};\n\nReviewslList.propTypes={\n  reviews:PropTypes.arrayOf(PropTypes.shape())\n}\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin: 20px 20px;\n\n  border-bottom: 2px solid;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { getMovieReviews } from '../../servises/Api';\nimport { ReviewslList } from 'components/ReviewslList/ReviewslList';\n\nimport { Section } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setMovieReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieReviews(movieId)\n      .then(response => {\n        setMovieReviews(response);\n      })\n      .catch(error => setError(error.message))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Oops, mistake:{error}</p>}\n\n      <Section>\n        <ReviewslList reviews={reviews} />\n      </Section>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst config = {\n  url: '/trending/movie/week',\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0bf9a11da9d083f4751315d07dcbd89b',\n  },\n};\n\nexport const getTrandingApi = async () => {\n  const response = await axios(config);\n  return response.data.results;\n};\n\nexport const getMovieCredits = async movieId => {\n  const config = {\n    url: `/movie/${movieId}/credits`,\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: '0bf9a11da9d083f4751315d07dcbd89b',\n    },\n  };\n\n  const response = await axios(config);\n  return response.data.cast;\n};\n\nexport const getMovieDetailsById = async movieId => {\n  const config = {\n    url: `/movie/${movieId}`,\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: '0bf9a11da9d083f4751315d07dcbd89b',\n    },\n  };\n\n  const response = await axios(config);\n\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const config = {\n    url: `/movie/${movieId}/reviews`,\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: '0bf9a11da9d083f4751315d07dcbd89b',\n    },\n  };\n\n  const response = await axios(config);\n  return response.data.results;\n};\n\nexport const getMovieSearch = async params => {\n  const config = {\n    url: `/search/movie`,\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: '0bf9a11da9d083f4751315d07dcbd89b',\n      query: params,\n    },\n  };\n\n  const response = await axios(config);\n  return response.data.results;\n};\n"],"names":["ReviewsTitle","styled","Reviews","ReviewslItem","Author","Content","EmptyReviews","ReviewslList","reviews","length","map","id","author","content","Section","useState","setMovieReviews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","getMovieReviews","then","response","catch","message","finally","Loader","config","url","baseURL","params","api_key","getTrandingApi","axios","data","results","getMovieCredits","cast","getMovieDetailsById","getMovieSearch","query"],"sourceRoot":""}